<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ezen.dda.store.StoreService">

	<!-- 매장 등록 -->
	<insert id="storeinput"
		parameterType="com.ezen.dda.store.StoreDTO">
		insert into registration(store_id, storename, tel,
		address, lineintro, intro, image, main_menu, main_image, region_name,
		feature, dessert)
		values
		(#{store_id},#{storename},#{tel},#{address},#{lineintro},#{intro},#{image},#{main_menu},#{main_image},#{region_name},#{feature},#{dessert})
	</insert>

	<!-- 매장 등록 시 따봉수 테이블 추가 -->
	<insert id="insertDDA">
		insert into ddabong(store_id) values(#{param1})
	</insert>

	<!-- 매장 출력 -->
	<select id="storeoutput"
		resultType="com.ezen.dda.store.StoreDTO">
		select * from registration where store_id=#{param1}
	</select>

	<!-- 매장 수정 -->
	<select id="storemodifyview"
		resultType="com.ezen.dda.store.StoreDTO">
		select * from registration where store_id=#{param1}
	</select>

	<!-- 매장 수정 -->
	<update id="storemodifyfinal"
		parameterType="com.ezen.dda.store.StoreDTO">
		update registration set storename=#{storename},
		tel=#{tel}, address=#{address}, lineintro=#{lineintro},
		intro=#{intro}, image=#{image}, main_menu=#{main_menu},
		main_image=#{main_image}, region_name=#{region_name},
		feature=#{feature}, dessert=#{dessert} where store_id=#{store_id}
	</update>

	<!-- 매장 삭제 -->
	<!-- 업체 아이디를 외래키로 갖는 테이블의 데이터 삭제 -->
	<delete id="registrationdelete">
		delete from registration where store_id=#{param1}
	</delete>
	<delete id="ddabongdelete">
		delete from ddabong where store_id=#{param1}
	</delete>
	<delete id="stardelete">
		delete from star where store_id=#{param1}
	</delete>
	<delete id="waitingdelete">
		delete from waiting where store_id=#{param1}
	</delete>
	<delete id="reservationdelete">
		delete from reservation where store_id=#{param1}
	</delete>

	<!-- 마지막으로 업체 계정 삭제 -->
	<delete id="storedelete">
		delete from store where id=#{param1}
	</delete>

	<!-- 업체 가입 -->
	<insert id="storejoin">
		insert into store values
		(#{param1},#{param2},#{param3},#{param4},#{param5})
	</insert>

	<!-- 회원 가입 아이디 중복확인 -->
	<select id="storeidcheck" resultType="int">
		select count(*) from store
		where
		id = #{param1}
	</select>

	<!-- 회원 로그인 -->
	<select id="storelogincheck"
		resultType="com.ezen.dda.store.StoreDTO">
		select * from store
		where id =#{param1} and pw =#{param2}
	</select>

	<!-- 마이페이지 비밀번호 인증 -->
	<select id="storepwchecking"
		resultType="com.ezen.dda.store.StoreDTO">
		select * from store where id=#{param1} and pw=#{param2}
	</select>

	<!-- 업체 삭제 비밀번호 인증 -->
	<select id="storeleavechecking"
		resultType="com.ezen.dda.store.StoreDTO">
		select * from store where id =#{param1} and pw =#{param2}
	</select>

	<!-- 업체 아이디 찾기 -->
	<select id="storeidResult"
		resultType="com.ezen.dda.store.StoreDTO">
		select * from store where ceo =#{param1} and
		email=#{param2}
	</select>

	<!-- 업체 비번 찾기 -->
	<select id="storepwResult"
		resultType="com.ezen.dda.store.StoreDTO">
		select * from store where ceo =#{param1} and id=#{param2}
	</select>

	<!-- 스토어 예정 예약 현황 -->
	<select id="storeStatus"
		resultType="com.ezen.dda.store.StoreDTO">
		<![CDATA[
		SELECT rs.STORE_ID, rg.STORENAME, rs.RESERVATION_DATE,
		rs.RESERVATION_TIME,
		rs.PERSON_NUM, rs.RESERVATION_NUM, rg.TEL,
		rg.ADDRESS,
		SUBSTR(rg.image, 1, INSTR(rg.image, ' ') - 1) as image,
		rs.RESERVATION_NAME, cs.phone
		FROM RESERVATION rs
		JOIN registration rg ON
		rs.STORE_ID = rg.STORE_ID
        JOIN customer cs ON
        cs.id = rs.customer_id
		WHERE
		rs.store_id = #{param1}
		AND rs.RESERVATION_DATE >= (sysdate-1)
		ORDER BY rs.RESERVATION_DATE ASC, rs.RESERVATION_TIME asc
		]]>
	</select>
	
		<!-- 스토어 지난 예약 현황 -->
	<select id="storeStatusPass"
		resultType="com.ezen.dda.store.StoreDTO">
		<![CDATA[
		SELECT rs.STORE_ID, rg.STORENAME, rs.RESERVATION_DATE,
		rs.RESERVATION_TIME,
		rs.PERSON_NUM, rs.RESERVATION_NUM, rg.TEL,
		rg.ADDRESS,
		SUBSTR(rg.image, 1, INSTR(rg.image, ' ') - 1) as image,
		rs.RESERVATION_NAME, cs.phone
		FROM RESERVATION rs
		JOIN registration rg ON
		rs.STORE_ID = rg.STORE_ID
        JOIN customer cs ON
        cs.id = rs.customer_id
		WHERE
		rs.store_id = #{param1}
		AND rs.RESERVATION_DATE < (sysdate-1)
		ORDER BY rs.RESERVATION_DATE ASC, rs.RESERVATION_TIME asc
		]]>
	</select>
	
	<!-- 스토어 예약 삭제 -->
	<delete id="storeReservationDelete">
		delete RESERVATION where reservation_num=#{param1}
	</delete>

	<!-- 스토어 예약 삭제 하면 리뷰도 삭제해야하니까 -->
	<delete id="storeReviewDelete">
		delete review where reservation_num=#{param1}
	</delete>
	
<!-- 	캘린더 -->
<select id="calendar" resultType="com.ezen.dda.personalfunction.ReservationDTO">
select * from reservation where store_id = #{param1}
</select>
</mapper>