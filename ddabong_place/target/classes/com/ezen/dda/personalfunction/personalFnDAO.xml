<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ezen.dda.personalfunction.PersonalFnService">

	<!-- 리뷰와 예약 작성,출력에 필요한 reservation,customer,review 조인하여 출력 -->
	<select id="review"
		resultType="com.ezen.dda.personalfunction.ReviewDTO">
<![CDATA[
SELECT c.id, c.pw, c.name, c.nickname, c.phone, c.address, c.email,
       a.reservation_num, a.store_id, a.reservation_date, a.reservation_time, a.person_num,
       a.reservation_name, b.review_num, b.content, b.image, b.star, b.review_date
FROM reservation a
JOIN review b ON a.reservation_num = b.reservation_num
JOIN customer c ON a.customer_id = c.id
WHERE a.store_id = #{param1}
]]>
	</select>

	<!-- 따봉수 출력 -->
	<select id="ddabong"
		resultType="com.ezen.dda.personalfunction.DDAbongDTO">

		SELECT ${param2} as thismonth,
		sum(jan+feb+mar+apr+may+jun+jul+aug+sep+oct+nov+dcb) as totaldda
		FROM
		ddabong where store_id = #{param1}
		GROUP BY ${param2}
	</select>

	<!-- 업체정보 출력 -->
	<select id="registration"
		resultType="com.ezen.dda.personalfunction.RegistrationDTO">
		select * from registration where store_id = #{param1}
	</select>

	<insert id="reservation">
		insert into reservation
		values(reservation_seq.nextval,#{param1},#{param2},#{param3},#{param4},#{param5},#{param6})
	</insert>

	<!-- 리뷰 등록 전 예약여부 확인 -->
	<select id="reviewcheck" resultType="int">
		select count(*) from
		reservation
		where customer_id = #{param1} and store_id = #{param2}
	</select>

	<!-- 해당 매장에 대한 회원의 예약내역에서 가장 최근의 예약번호를 가져옴 -->
	<select id="reservnumlist"
		resultType="com.ezen.dda.personalfunction.ReviewDTO">
		select reservation_num from reservation where store_id =
		#{param1} and customer_id = #{param2} order by reservation_num DESC
	</select>
	<!-- 리뷰저장 -->
	<insert id="reviewsave">
		insert into review
		values(review_num_seq.nextval,#{param1},#{param2},#{param3},#{param4},#{param5})
	</insert>
	
<!-- 	예약확인 -->
		<!-- 예약 등록 전 중복 예약여부 확인 -->
	<select id="duplicatecheck" resultType="int">
	select count(*) from RESERVATION where customer_id = #{param1} 
	and TO_DATE(reservation_date, 'YY-MM-DD') = TO_DATE(#{param2}, 'YY-MM-DD')
	and store_id = #{param3}
</select>

	
	<select id="myStatus"
		resultType="com.ezen.dda.personalfunction.ReservationDTO">
		SELECT rs.STORE_ID, rg.STORENAME, rs.RESERVATION_DATE, rs.RESERVATION_TIME,
		rs.PERSON_NUM, rs.RESERVATION_NUM, rg.TEL, rg.ADDRESS, 
		SUBSTR(rg.image, 1, INSTR(rg.image, ' ') - 1) as image, rs.RESERVATION_NAME
		FROM RESERVATION rs
		JOIN registration rg ON rs.STORE_ID = rg.STORE_ID
		WHERE rs.customer_id = #{param1}
	</select>
	
	<!-- 예약 삭제 -->
	<delete id="reservationDelete">
		delete RESERVATION where reservation_num=#{param1}
	</delete>
	
<!-- 	따봉 수 추가 -->
	<update id="ddaplus">
	update ddabong set ${param1} = ${param1} + 1 where store_id = #{param2}
	</update>
	
<!-- 	즐겨찾기 추가 -->
	<insert id="addsubscribe">
	insert into star values(#{param1},#{param2})
	</insert>
	
<!-- 	즐겨찾기 여부 확인 -->
	<select id="subscribecheck" resultType="int">
	select count(*) from star where customer_id = #{param1} and store_id = #{param2}
</select>
	<delete id="canclesubscribe">
	delete from star where customer_id = #{param1} and store_id = #{param2}
	</delete>

<!-- 	즐겨찾기 출력 -->
	<select id="starlist" resultType="com.ezen.dda.personalfunction.SubscribeDTO">
		select r.storename, r.image, s.store_id
		from star s join registration r on s.store_id = r.store_id 
		where customer_id=#{param1}
	</select>

	
<!-- 	리뷰 삭제 -->
<delete id="reviewDelete">
delete from review where review_num = #{param1}
</delete>
</mapper>
