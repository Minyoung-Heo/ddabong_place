<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ezen.dda.waiting.WaitingService">
<insert id="waitingSave" parameterType="com.ezen.dda.waiting.WaitingDTO">
insert into waiting(store_id, customer_id, name, phone, person_num) values(#{store_id}, #{customer_id}, #{name}, #{phone}, #{person_num})
</insert>

<select id="waitingOut" resultType="com.ezen.dda.waiting.WaitingDTO">
select * from waiting where store_id = #{param1} and customer_id = #{param2}
</select>

<select id="mywaiting" resultType="com.ezen.dda.waiting.WaitingDTO">
select w.store_id, w.waiting_num, w.customer_id, w.name, w.person_num, r.storename, r.lineintro,
SUBSTR(r.image, 1, INSTR(r.image, ' ') - 1) as image
from waiting w join registration r on w.store_id=r.store_id where customer_id = #{param1}
</select>

<delete id="cancelWaiting">
delete from waiting where store_id = #{param1} and waiting_num = #{param2}
</delete>

<update id="updateWaitingNum">
update waiting set waiting_num = waiting_num - 1 where store_id = #{param1} and waiting_num > #{param2}
</update>

<select id="waitingList" resultType="com.ezen.dda.waiting.WaitingDTO">
select * from waiting where store_id = #{param1} order by waiting_num
</select>

<update id="call">
update waiting set waiting_num = 0 where store_id = #{param1} and waiting_num = #{param2}
</update>

<delete id="enter">
delete from waiting where store_id = #{param1} and waiting_num = 0
</delete>

<select id="totalWaiting" resultType="com.ezen.dda.waiting.WaitingDTO">
select store_id, count(*) as totalwaiting from waiting group by store_id
</select>

<select id="waitingcheck" resultType="com.ezen.dda.waiting.WaitingDTO">
select * from waiting where store_id = #{param1} and customer_id = #{param2}
</select>

</mapper>